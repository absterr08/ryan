{"version":3,"sources":["util.js","home.jsx","steps/step.jsx","steps/steps.jsx","finish.jsx","main.jsx","App.js","reportWebVitals.js","index.js"],"names":["NUM_SOLVED_KEY","stepWithLineBreaks","stepStr","split","map","words","started","go","className","onClick","wrong","right","hint","answer","advance","unlock","showAnswer","useState","inputVal","setVal","answeredWrong","setAnsweredWrong","answeredRight","setAnsweredRight","onAnsweredRight","setVisible","delay","numTimes","i","setTimeout","showAndHide","onSubmit","args","preventDefault","value","onInput","target","type","STEPS","StepNumber","currStep","totalSteps","StepButtons","goBack","nextDisabled","startingStep","onComplete","Math","min","length","setStep","countUnlocked","setCountUnlocked","num","localStorage","setItem","JSON","stringify","setNumSolved","allSteps","step","undefined","hidden","setHidden","HOME","SOLVING","numSolved","parse","getItem","getNumSolved","state","setState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe932bde.chunk.js","sourcesContent":["import React from \"react\";\n\nconst NUM_SOLVED_KEY = \"NUM_SOLVED\";\n\nexport function getNumSolved() {\n  let numSolved;\n  try {\n    numSolved = JSON.parse(localStorage.getItem(NUM_SOLVED_KEY) || \"0\");\n  } catch {\n    numSolved = 0;\n  }\n  return numSolved;\n}\n\nexport function setNumSolved(num) {\n  try {\n    localStorage.setItem(NUM_SOLVED_KEY, JSON.stringify(num));\n  } catch {\n  }\n}\n\nexport const showAndHide = ({\n  setVisible,\n  delay = 400,\n  numTimes,\n}) => {\n  let i = 0;\n  while (i < numTimes * 2) {\n    setTimeout(() => {\n      setVisible(true)\n    }, delay * i);\n    i ++;\n    setTimeout(() => {\n      setVisible(false)\n    }, delay * i);\n    i ++;\n  }\n}\n\nexport const stepWithLineBreaks = (stepStr) => {\n  return stepStr.split(\"\\n\").map(words => {\n    return <p>{words}</p>;\n  });\n}","import React from \"react\";\n\nexport default ({\n  started,\n  go,\n}) => (\n  <div>\n    <p>\n      Welcome! Congrats! You solved the first clue\n      <br />\n      Continue on to see what awaits you\n      <br />\n      <br />\n      Here you'll find a list of clues\n      <br />\n      And riddles, hints, and puzzles too\n      <br />\n      <br />\n      Some hints will lead you to a code,\n      <br />\n      Some hints have answers you will know.\n      <br />\n      <br />\n      And, with each code correct,\n      <br />\n      Closer and closer you will get,\n      <br />\n      To finding the destination I have set...\n    </p>\n    <div className=\"start-container\">\n      {/* <span>{started ? \"You're back!\" : \"Let's go!\"}</span> */}\n      <button className=\"start-button\"onClick={go}>\n        {started ? \"continue\" : \"begin\"}\n      </button>\n    </div>\n  </div>\n);\n","import React, { useState } from \"react\";\nimport \"./steps.css\";\nimport { showAndHide } from \"../util\";\n\nconst wrong = <span className=\"error\">Try again</span>;\nconst right = <span className=\"error\">ðŸŽ‰</span>;\n\nexport default ({\n  hint,\n  answer,\n  advance,\n  unlock,\n  showAnswer,\n}) => {\n  const [inputVal, setVal] = useState(\"\");\n  const [answeredWrong, setAnsweredWrong] = useState(false);\n  const [answeredRight, setAnsweredRight] = useState(false);\n\n  const onAnsweredRight = () => {\n    showAndHide({\n      setVisible: setAnsweredRight,\n      delay: 300,\n      numTimes: 2,\n    });\n    // TODO: async/await instead\n    setTimeout(() => {\n      setVal(\"\");\n      unlock();\n      advance();\n    }, 1200);\n  }\n\n  const onSubmit = args => {\n    args.preventDefault();\n    // if (inputVal.toLocaleLowerCase() === answer.toLocaleLowerCase()) {\n    if (true) {\n      onAnsweredRight();\n      setAnsweredWrong(false);\n    } else {\n      showAndHide({\n        setVisible: setAnsweredWrong,\n        delay: 300,\n        numTimes: 3,\n      });\n    }\n  }\n  const onInput = (args) => {\n    setVal(args.target.value);\n  }\n\n  return (\n    <div className=\"step-container\">\n      <span className=\"hint\">{hint}</span>\n      <div className=\"step-content-container\">\n        <div className=\"error-container\">\n          <div className={answeredWrong ? \"error-shown\" : \"error-hidden\"}>\n            {wrong}\n          </div>\n          <div className={answeredRight ? \"success-shown\" : \"success-hidden\"}>\n            {right}\n          </div>\n        </div>\n        <form onSubmit={onSubmit}>\n          {\n            showAnswer ? <span className=\"answer\">{answer}</span>\n            : <input className=\"input\" value={inputVal} onInput={onInput} type=\"text\" />\n          }\n        </form>\n\n\n        <div className=\"submit-button-container\">\n          {!showAnswer && <button className=\"submit-button\" onClick={onSubmit}>enter</button>}\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { useState } from \"react\";\nimport Step from \"./step\";\nimport { stepWithLineBreaks, setNumSolved } from \"../util\";\n// import { STEPS } from \"./texts\";\nimport \"./steps.css\";\n\nconst STEP3 = stepWithLineBreaks(\"lalalala aba \\\nbb \\n lala bbbfbf \\n\");\n\nconst STEPS = [\n  [\"lala \\n blah\", \"answer1\"],\n  [\"blah blah la\", \"answer2\"],\n  [\"lalalala aba \\\nbb \\n lala bbbfbf \\n\", \"answer3\"],\n];\n\nconst StepNumber = ({ currStep, totalSteps }) => (\n  <div className=\"step-number\">\n    {currStep}/{totalSteps}\n  </div>\n)\n\nconst StepButtons = ({\n  goBack,\n  advance,\n  nextDisabled,\n}) => (\n  <div className={\"next-buttons\"}>\n    <button className={`next-button ${goBack ? \"\": \"hidden\"}`} onClick={goBack}>{\"<\"}</button>\n    <button className={`next-button ${advance ? \"\": \"hidden\"}`} onClick={advance}>{\">\"}</button>\n    {/* <button disabled={nextDisabled} className=\"next-button\" onClick={advance}>{\">\"}</button> */}\n  </div>\n);\n\nexport default ({ startingStep, onComplete }) => {\n  const [currStep, setStep] = useState(Math.min(startingStep, STEPS.length - 1));\n  const [countUnlocked, setCountUnlocked] = useState(startingStep);\n\n  const advance = () => {\n    if (currStep === STEPS.length - 1) onComplete();\n    if (currStep >= countUnlocked) return;\n    setStep(currStep + 1);\n  };\n\n  const goBack = () => {\n    if (currStep === 0) return;\n    setStep(currStep - 1);\n  };\n\n  const unlock = () => {\n    setCountUnlocked(countUnlocked + 1);\n    setNumSolved(countUnlocked + 1);\n    if ((countUnlocked + 1) === STEPS.length) {\n      onComplete();\n      return;\n    }\n    setStep(currStep + 1);\n  };\n\n  const allSteps = STEPS.map(\n    step => (\n      <Step\n        hint={stepWithLineBreaks(step[0])}\n        answer={step[1]}\n        showAnswer={countUnlocked > currStep}\n        unlock={unlock}\n        advance={advance}\n        goBack={goBack}\n      />\n  ));\n  return (\n    <>\n      <StepNumber currStep={currStep + 1} totalSteps={STEPS.length} />\n      {allSteps[currStep]}\n      <StepButtons\n        goBack={currStep > 0 ? goBack : undefined}\n        advance={currStep < countUnlocked ? advance : undefined}\n        nextDisabled={currStep >= countUnlocked}\n      />\n    </>\n  );\n}","import React, { useState } from \"react\";\n\nexport default ({ goBack }) => {\n  const [hidden, setHidden] = useState(true);\n  setTimeout(() => setHidden(false), 1);\n  return (\n    <div className={`end-poem ${hidden ? \"end-hidden\" : \"end-shown\"}`}>\n      <p>\n        You'll find me in a meadow where flowers don't grow,\n        <br />\n        But our love bloomed,\n        <br />\n        On warm summer nights under the stars\n        <br />\n        A special place in our hearts.\n        <br /><br />\n        PS text me when you're on your way pls :) {\"<3\"}\n      </p>\n      <div className=\"start-container\">\n        <button className=\"start-button\" onClick={goBack}>\n          {\"<\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { getNumSolved } from \"./util\";\nimport Home from \"./home\";\nimport Steps from \"./steps/steps\";\nimport End from \"./finish\";\n\nconst HOME = \"home\";\nconst SOLVING = \"solving\";\nconst SOLVED = \"solved\";\n\nexport default () => {\n  const numSolved = getNumSolved();\n  const [state, setState] = useState(HOME);\n  // const [state, setState] = useState(SOLVED);\n  switch (state) {\n    case HOME:\n      return (\n        <Home started={numSolved > 0} go={() => setState(SOLVING)} />\n      );\n    case SOLVING:\n      return (\n        <Steps startingStep={numSolved} onComplete={() => setState(SOLVED)} />\n      );\n    default:\n      return <End goBack={() => setState(SOLVING)} />;\n  }\n}","import Home from \"./main\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Home />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}